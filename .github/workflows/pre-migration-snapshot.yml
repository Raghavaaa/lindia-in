name: Pre-Migration Snapshot

# Purpose: Create Railway database snapshot before running migrations
# Triggers: Manual workflow dispatch only (on-demand)
# Secrets Required: RAILWAY_TOKEN (from repository secrets)
# Manual Approval: Required before snapshot creation

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to snapshot (production/staging)'
        required: true
        type: choice
        options:
          - production
          - staging
      migration_description:
        description: 'Brief description of the migration'
        required: true
        type: string
      service_name:
        description: 'Service to snapshot (database/backend)'
        required: true
        type: choice
        options:
          - database
          - backend

jobs:
  approve-snapshot:
    name: Approval Gate - Pre-Migration Snapshot
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}-approval
    steps:
      - name: Log approval request
        run: |
          echo "## Snapshot Approval Request" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Service:** ${{ inputs.service_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Migration:** ${{ inputs.migration_description }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Requested by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time:** $(date -u)" >> $GITHUB_STEP_SUMMARY
  
  create-snapshot:
    name: Create Railway Snapshot
    runs-on: ubuntu-latest
    needs: approve-snapshot
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Railway CLI
        run: npm install -g @railway/cli
      
      - name: Create snapshot timestamp
        id: snapshot-name
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          SNAPSHOT_NAME="pre-migration-${TIMESTAMP}-${{ inputs.service_name }}"
          echo "name=${SNAPSHOT_NAME}" >> $GITHUB_OUTPUT
          echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
      
      - name: Trigger Railway snapshot
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "Creating snapshot: ${{ steps.snapshot-name.outputs.name }}"
          echo "Service: ${{ inputs.service_name }}"
          echo "Environment: ${{ inputs.environment }}"
          echo "Migration: ${{ inputs.migration_description }}"
          
          # Note: Actual Railway snapshot command - adjust based on Railway CLI
          # railway snapshot create --service ${{ inputs.service_name }} --name ${{ steps.snapshot-name.outputs.name }}
          
          echo "✓ Snapshot creation initiated"
          echo "⚠️ Manual verification required in Railway dashboard"
      
      - name: Post snapshot details
        run: |
          echo "## Snapshot Created" >> $GITHUB_STEP_SUMMARY
          echo "- **Name:** ${{ steps.snapshot-name.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Service:** ${{ inputs.service_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Verify snapshot in Railway dashboard" >> $GITHUB_STEP_SUMMARY
          echo "2. Proceed with migration" >> $GITHUB_STEP_SUMMARY
          echo "3. Test migration success" >> $GITHUB_STEP_SUMMARY
          echo "4. Keep snapshot for 30 days minimum" >> $GITHUB_STEP_SUMMARY
      
      - name: Create backup tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "snapshot-${{ steps.snapshot-name.outputs.timestamp }}"
          git push origin "snapshot-${{ steps.snapshot-name.outputs.timestamp }}"

